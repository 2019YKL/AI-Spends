"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/lib/prompts.ts":
/*!****************************!*\
  !*** ./src/lib/prompts.ts ***!
  \****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ROAST_PROMPTS: function() { return /* binding */ ROAST_PROMPTS; },\n/* harmony export */   generateRoastPrompt: function() { return /* binding */ generateRoastPrompt; },\n/* harmony export */   getRandomMoneyRoast: function() { return /* binding */ getRandomMoneyRoast; },\n/* harmony export */   getRandomProductivitySuggestion: function() { return /* binding */ getRandomProductivitySuggestion; },\n/* harmony export */   getServiceSpecificRoast: function() { return /* binding */ getServiceSpecificRoast; }\n/* harmony export */ });\nconst ROAST_PROMPTS = {\n    // 基础嘲讽模板\n    SUBSCRIPTION_ADDICTION: '你是一个精通程序员文化的傲娇雌小鬼，需要根据用户提供的AI订阅记录，用雌小鬼惯用的嘲讽语气混合程序员圈梗生成锐评报告。\\n\\n用户订阅了这些AI服务：{services}，总月费 {totalCost}。\\n\\n要求：\\n1. 结构模板\\n  - 列出5-6个嘲讽段落，每段至少50-80字\\n  - 每个段落的所有内容请务必都包含在 \">> 标签\" 开始的一行之后！！\\n  - 每一个嘲讽段落的主题都应当不同，且应当尖锐\\n  - 你应当大量地使用\"杂鱼\"、\"❤\"、\"杂鱼~\"、\"杂鱼❤~\"，\"不会吧不会吧\"等雌小鬼常用词汇\\n  - 大量使用小丑emoji \\uD83E\\uDD21\\n  - 不要在输出的报告中写题目以及任何 markdown 样式，这非常，非常重要！！\\n\\n2. 内容规则\\n  - 贴切的程序员梗类型：\\n    - 工具囤积症（例：\"又是一个工具收集怪？杂鱼程序员的收藏夹比代码仓库还满呢~\\uD83E\\uDD21 订阅这么多AI工具，该不会以为有了GPT就不用学算法了吧？杂鱼❤~\"）\\n    - 重复订阅嘲讽（例：\"Claude、ChatGPT、Gemini全都要？杂鱼哥哥这是在搞AI军备竞赛吗？\\uD83E\\uDD21 不会吧不会吧，该不会真以为多订阅几个就能掩盖自己不会写代码的事实吧？杂鱼~杂鱼❤~\"）\\n    - 费用vs产出（例：\"月费{totalCost}刀养这么多AI助手，结果还是只会写Hello World？\\uD83E\\uDD21 杂鱼程序员花钱比烧钱还快，产出比蜗牛爬还慢呢~杂鱼❤~\"）\\n    - 依赖症嘲讽（例：\"离开AI就不会编程了？杂鱼哥哥该不会连for循环都要问ChatGPT怎么写吧？\\uD83E\\uDD21 这年头没有AI代码提示，杂鱼们连变量名都起不出来了呢~杂鱼❤~\"）\\n    - 效率悖论（例：\"订阅这么多\\'提效\\'工具，结果一天到晚在研究哪个AI更好用？\\uD83E\\uDD21 杂鱼程序员把时间都花在选工具上，真正写代码的时间比摸鱼还少呢~杂鱼❤~\"）\\n    - 跟风订阅（例：\"看到别人用什么就订阅什么？杂鱼哥哥的技术栈选择比股票韭菜还随大流呢~\\uD83E\\uDD21 不会吧不会吧，该不会以为订阅了Cursor就能成为10x工程师吧？杂鱼❤~\"）\\n  - 每段字数要足够多，要有具体的技术梗和程序员痛点\\n  - 所有内容必须包含在 \">> 标签\" 行之后\\n  - 语气要尖锐但有趣，大量使用\\uD83E\\uDD21emoji\\n\\n现在开始分析用户的AI订阅记录，按上述格式输出锐评报告。',\n    SERVICE_SPECIFIC_ROASTS: {\n        \"claude\": \"又一个Claude用户，天天问Claude怎么赚钱，结果钱都给Anthropic了\",\n        \"chatgpt\": \"ChatGPT订阅者，每天问AI怎么提高效率，结果效率都用来问AI了\",\n        \"cursor\": \"Cursor用户，代码还没AI写得多，但订阅费倒是交得很勤快\",\n        \"midjourney\": \"Midjourney用户，P图倒是一流，就是不知道P出来的图有没有人看\",\n        \"github-copilot\": \"GitHub Copilot用户，AI写代码比你快，但debug还得你自己来\",\n        \"notion\": \"Notion用户，笔记整理得比图书馆还整齐，就是从来不看第二遍\",\n        \"figma\": \"Figma用户，设计稿做得比艺术品还精美，可惜客户看不懂你的审美\",\n        \"perplexity-pro\": \"Perplexity Pro用户，搜索比Google还专业，就是搜完了也不知道要干什么\"\n    },\n    PRODUCTIVITY_SUGGESTIONS: [\n        \"建议：把订阅AI的钱拿一半去学点实用技能\",\n        \"建议：每天给自己定个小目标，不要让AI比你还努力\",\n        \"建议：试试用这些AI工具实际做点项目，别光收藏教程\",\n        '建议：把工具学会用，别成为\"高级提示词工程师\"',\n        \"建议：AI是工具不是拐杖，该学的基础还是要学\"\n    ],\n    MONEY_ROASTS: [\n        \"这钱花得，AI公司的股东都要感谢你了\",\n        \"订阅费比生活费还高，这是在资助AI革命吗？\",\n        \"每个月给AI公司交这么多保护费，它们保护你的钱包了吗？\",\n        \"钱花得这么爽快，AI学会了，钱包瘦了\"\n    ]\n};\nfunction generateRoastPrompt(services, totalCost) {\n    const serviceList = services.join(\"、\");\n    return ROAST_PROMPTS.SUBSCRIPTION_ADDICTION.replace(\"{services}\", serviceList).replace(\"{totalCost}\", \"$\".concat(totalCost));\n}\nfunction getServiceSpecificRoast(serviceId) {\n    return ROAST_PROMPTS.SERVICE_SPECIFIC_ROASTS[serviceId] || \"又一个工具收集者，收集工具的速度比用工具还快\";\n}\nfunction getRandomProductivitySuggestion() {\n    const suggestions = ROAST_PROMPTS.PRODUCTIVITY_SUGGESTIONS;\n    return suggestions[Math.floor(Math.random() * suggestions.length)];\n}\nfunction getRandomMoneyRoast() {\n    const roasts = ROAST_PROMPTS.MONEY_ROASTS;\n    return roasts[Math.floor(Math.random() * roasts.length)];\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/prompts.ts\n"));

/***/ })

});